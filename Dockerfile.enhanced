# =============================================================================
# OpenRuntime Enhanced - Production Docker Image
# Multi-stage build for optimized production deployment
# =============================================================================

# Use latest Python and Rust base images
FROM python:3.11-slim as base
FROM rust:1.70 as builder

# Set build arguments
ARG BUILD_DATE
ARG VERSION=2.0.0
ARG VCS_REF

# Add metadata
LABEL maintainer="OpenRuntime Team" \
      version="${VERSION}" \
      description="OpenRuntime Enhanced - AI-Powered GPU Runtime System" \
      build-date="${BUILD_DATE}" \
      vcs-ref="${VCS_REF}"

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    pkg-config \
    libssl-dev \
    libffi-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Rust for high-performance components
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set working directory
WORKDIR /app

# Copy dependency files
COPY requirements.txt requirements-dev.txt ./
COPY rust-openai-crate/ ./rust-openai-crate/

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Build Rust components
WORKDIR /app/rust-openai-crate
RUN cargo build --release

# Stage 2: Runtime environment
FROM python:3.11-slim as runtime

# Install runtime system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    htop \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r openruntime && useradd -r -g openruntime openruntime

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy Rust binaries
COPY --from=builder /app/rust-openai-crate/target/release/cli /usr/local/bin/openruntime-cli

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/cache && \
    chown -R openruntime:openruntime /app

# Set environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    LOG_LEVEL=info \
    HOST=0.0.0.0 \
    PORT=8001 \
    WORKERS=4 \
    MAX_CONCURRENT_TASKS=20 \
    CACHE_MAX_SIZE=1000 \
    GPU_FALLBACK_TO_CPU=true

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/ || exit 1

# Expose port
EXPOSE ${PORT}

# Switch to non-root user
USER openruntime

# Start command
CMD ["python", "openruntime_enhanced.py", "--host", "0.0.0.0", "--port", "8001"]

# =============================================================================
# Build Instructions:
# docker build -f Dockerfile.enhanced -t openruntime-enhanced:latest .
# docker run -p 8001:8001 -e OPENAI_API_KEY=your_key openruntime-enhanced:latest
# ============================================================================= 