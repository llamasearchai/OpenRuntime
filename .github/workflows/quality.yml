name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cSpell
        run: npm install -g cspell
      
      - name: Run cSpell
        run: cspell "**/*.{py,md,yml,yaml,json,js,ts,sh}" --config ./cspell.json

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run Black
        run: black --check openruntime/ tests/
      
      - name: Run isort
        run: isort --check-only openruntime/ tests/
      
      - name: Run flake8
        run: flake8 openruntime/ tests/ --max-line-length=100 --extend-ignore=E203
      
      - name: Run mypy
        run: mypy openruntime/ --ignore-missing-imports
      
      - name: Run bandit
        run: bandit -r openruntime/ --skip B101
      
      - name: Run safety check
        run: safety check --json
        continue-on-error: true

  test-imports:
    name: Test Imports
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.11']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn httpx pydantic numpy
      
      - name: Test imports
        run: |
          python -c "from openruntime.runtime_engine import RuntimeEngine"
          python -c "from openruntime.api_v2 import app"
          python -c "from openruntime.backends.base_backend import BaseBackend"
      
      - name: Run validation script
        run: python validate_fixes.py

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Check README exists
        run: |
          test -f README.md
          test -f README_V2.md
      
      - name: Check for broken links in markdown
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'no'
          config-file: '.github/markdown-link-check-config.json'
        continue-on-error: true

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install pre-commit
        run: pip install pre-commit
      
      - name: Run pre-commit
        run: pre-commit run --all-files
        continue-on-error: true