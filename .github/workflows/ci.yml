name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "18"

jobs:
  # =============================================================================
  # Code Quality and Testing
  # =============================================================================
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format with black
      run: black --check .
    
    - name: Sort imports with isort
      run: isort --check-only .
    
    - name: Type check with mypy
      run: mypy openruntime_enhanced/ --ignore-missing-imports
    
    - name: Security check with bandit
      run: bandit -r . -x tests/
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  # =============================================================================
  # macOS Testing (for Metal support)
  # =============================================================================
  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Test with pytest (macOS)
      run: |
        pytest tests/ -v --tb=short
    
    - name: Test server startup
      run: |
        timeout 10s python -m openruntime_enhanced --host 127.0.0.1 --port 8001 || echo "Server test completed"

  # =============================================================================
  # Docker Build and Test
  # =============================================================================
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      run: docker build -f Dockerfile.enhanced -t openruntime .
    - name: Test Docker image
      run: docker run --rm openruntime python -c "import openruntime_enhanced; print('Import successful')"